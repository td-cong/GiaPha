
@{
    ViewBag.Title = "Phả Đồ";
    var allData = Model;

}
@model IEnumerable<GiaPha.Models.ThanhVien>
<style>


    #tree {
        width: 100%;
        height: 100%;
    }
</style>
<main aria-labelledby="title">
    <div class="container">
        <div class="row">
            <div class="col-md-12" align="center" style="margin-top:20px; margin-bottom:5px"><div class="tab-page-long active"><a href"">Phả đồ</a></div></div>
        </div>
        <div class="row">
            <link href="https://fonts.googleapis.com/css?family=Gochi+Hand" rel="stylesheet">

            <script src="~/Scripts/orgchart.js"></script>

            <div class="col-md-12">
                <div id="tree" style="height:calc(100vh - 160px)"></div>
            </div>
        </div>
    </div>
</main>
<script>
    window.onload = function () {
        var nodes = [
                @foreach (var item in allData)
                {
                    // Nếu là vợ/chông thì thêm tags partner là OrgChartJs nó hiểu node này là vợ/chồng
                    var tags = item.VoChong > 0 ? $", tags: [\"partner\"]" : "";
                    var pid = item.VoChong > 0 ? item.VoChong : item.PID;
                    // Tìm vợ chồng của pid để đặt ppid, có ppid thì nó mới biết nằm giữa 2 cái
                    var ppItem = Model.FirstOrDefault(x =>
                        x.ID != item.ID
                        && x.VoChong == item.PID
                    );
                    //var ppidString = ppItem != null ? $", ppid: {ppItem.ID}" : "";
                    var ppidString = "";
                    // Render item
                    var node = $"{{ id: {item.ID}, pid: \"{pid}\", \"Họ tên\": \"{item.HoTen}\", \"Năm sinh - Năm mất\": \"{item.NamSinh} {(item.NamMat != null ? " - " + item.NamMat : "")}\", \"img\": \"{(item.Avt?.Length > 0 ? item.Avt : "/Content/img/avt.jpg")}\"{tags}{ppidString} }},\n";
                    @Html.Raw(node);
                    // Nếu dùng chung trường PID để xác định cả cha cả vợ chồng thì
                }
            ];
        
        var chart = new OrgChart(document.getElementById("tree"), {
            template: "diva",
            enableDragDrop: true,
            scaleInitial: OrgChart.match.width,
            nodeBinding: {
                field_0: "Họ tên",
                field_1: "Năm sinh - Năm mất",
                img_0: "img",
            },
        });


        chart.on('redraw', (sender) => {
            let minBtns = document.querySelectorAll('*[data-btn-min]');

            minBtns.forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    chart.minimize(btn.getAttribute('data-btn-min'));
                });
            });

            let maxBtns = document.querySelectorAll('*[data-btn-max]');

            maxBtns.forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    chart.maximize(btn.getAttribute('data-btn-max'));
                });
            });
        });


        chart.load(nodes);

    };
</script>

<style>
    [data-n-id] rect {
        fill: #016e25;
    }
    [data-n-id] circle {
        stroke: #016e25;
    }
    #tree > svg {
        background-color: #d9aa7166;
        background-image: url(/Content/img/page-bg.png);
        background-size: 100% 100%;
    }
    [data-l-id] path {
        stroke: #000;
        stroke-width: 3px;
    }
    .boc-edit-form-header,
    .boc-img-button,
    .boc-button {
        background-color: #016e25 !important;
    }
</style>